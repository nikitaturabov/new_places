import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { typePlaceEat } from "./consts/places";
import Link from "next/link";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,

}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <main className="flex justify-center items-center">
          <div className="p-4 flex flex-wrap gap-2">
          {Object.keys(typePlaceEat).map((type) => (
            <Link className="p-2 rounded-md bg-gray-100 hover:bg-gray-200 text-gray-800 ml-2" href={`/places/${type}`} key={type}>  
              {typePlaceEat[type as keyof typeof typePlaceEat]}
            </Link>
          ))}
        </div>
      </main>
        {children}
      </body>
    </html>
  );
}
